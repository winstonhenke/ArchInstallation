#!/bin/bash

block_device="${1}"

# Install grub as the bootloader
grub-install --target=i386-pc --recheck "${block_device}"

#Get root partition UUID (Do NOT use the UUID of the unlocked luks device)
block_device_uuid=$(blkid ${block_device}2 | sed -n 's/.* UUID=\"\([^\"]*\)\".*/\1/p')

#Set kernel parameters for unlocking encrypted root partition
sed -i "/GRUB_CMDLINE_LINUX=/c\\GRUB_CMDLINE_LINUX=\"rd.luks.uuid=${block_device_uuid} rd.luks.name=${block_device_uuid}=cryptroot root=/dev/mapper/cryptroot rd.luks.crypttab=no\"" /etc/default/grub

#Re-generate the grub.cfg file
grub-mkconfig -o /boot/grub/grub.cfg

echo en_US.UTF-8 UTF-8 > /etc/locale.gen
echo LANG=en_US.UTF-8 > /etc/locale.conf
locale-gen

#Specify hooks
sed -i 's/^HOOKS.*/HOOKS=(base systemd autodetect keyboard modconf block sd-encrypt filesystems fsck)/' /etc/mkinitcpio.conf

#Create a new initramfs
mkinitcpio -p linux

printf "Setting password for root... \n"
passwd
printf "Finished setting password for root... \n"

#Give wheel group root privilege
echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/default
visudo -cf /etc/sudoers.d/default
if [ ! $? -eq 0 ]; then
    printf "\n\nError setting up local sudoers file\n\n" 
    exit 1
fi
printf "Successfully setup local sudoers file\n"

#Create a new user
read -p "Enter a username for a new ADMIN user: " -r new_user

useradd -m -G wheel -s /bin/bash "${new_user}"
passwd "${new_user}"

#Install utils
pacman -S --noconfirm gnome gnome-tweak-tool firefox git

#systemctl enable gdm.service

comm1='mkdir ~/bin'
#Temp until it is pulling all config files from github
comm2='echo "export PATH=$PATH:$HOME/bin" >> ~/.bashrc'
comm3='echo "XDG_SESSION_TYPE=wayland dbus-run-session gnome-session" >> ~/bin/startw'
su "${new_user}" -c "${comm1};${comm2};${comm3}"

#Probably not needed with Gnome
#systemctl enable NetworkManager.service

#TODO AUR Installs
    #Vscode
        #git clone https://aur.archlinux.org/visual-studio-code-bin.git
        #cd visual-studio-code-bin/
        # makepkg -si --noconfirm 

    #gnome-shell-extension-dash-to-dock
        #https://aur.archlinux.org/packages/gnome-shell-extension-dash-to-dock/

printf "BaseInstall finished...\n\n\n"

#Exit arch-chroot
exit