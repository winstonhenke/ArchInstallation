#!/bin/bash

block_device="${1}"

# Install grub as the bootloader
eval "grub-install --target=i386-pc --recheck ${block_device}"

#Get root partition UUID (Do NOT use the UUID of the unlocked luks device)
block_device_uuid=$(blkid ${block_device}2 | sed -n 's/.* UUID=\"\([^\"]*\)\".*/\1/p')

#Set kernel parameters for unlocking encrypted root partition
sed -i "/GRUB_CMDLINE_LINUX=/c\\GRUB_CMDLINE_LINUX=\"rd.luks.uuid=${block_device_uuid} rd.luks.name=${block_device_uuid}=cryptroot root=/dev/mapper/cryptroot rd.luks.crypttab=no\"" /etc/default/grub

#Re-generate the grub.cfg file
eval "grub-mkconfig -o /boot/grub/grub.cfg"

eval "echo en_US.UTF-8 UTF-8 > /etc/locale.gen"
eval "echo LANG=en_US.UTF-8 > /etc/locale.conf"
eval "locale-gen"

#Specify hooks
sed -i 's/^HOOKS.*/HOOKS=(base systemd autodetect keyboard modconf block sd-encrypt filesystems fsck)/' /etc/mkinitcpio.conf

#Create a new initramfs
eval "mkinitcpio -p linux"

printf "Setting password for root... \n"
eval "passwd"

#Create a new user
read -p "Enter a username for a new user: " -r new_user
eval "useradd -m -G wheel -s /bin/bash ${new_user}"
eval "passwd ${new_user}"

eval "su ${new _user}"

#Exit the su command
eval "exit"

printf "BaseInstall finished...\n\n\n"

#Exit arch-chroot
eval "exit"